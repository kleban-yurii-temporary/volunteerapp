@using System.Globalization;
@using VolunteerRequestApp.Client.Infrastructure;
@using VolunteerRequestApp.Shared.Dtos.Currency;
@using VolunteerRequestApp.Shared.Dtos.Request;

@inject NavigationManager Navigation
@inject HttpCurrencyPairService currencyService

<div class="card">
    <div style="background-color:#ccc; background-image:url(/api/requests/@Request.Id/photos/view?@(new Random().NextDouble())); background-size: cover; background-position:center center; height: 200px; width: 100%; position: relative">
        @if (Request.IsFavorite)
        {
            <div style="position:absolute; top: -3px; right: 10px;">
                <SfIcon Name="IconName.Bookmark" Size="IconSize.Large"></SfIcon>
        </div>
        }
    </div>
    <div class="card-body">
        <h5 class="card-title">@Request.Title</h5>
        <p class="card-text">@((MarkupString)Request.Details)</p>

        <div class="row">
            <div class="col-6">
                Дата відкриття:
                <strong>@Request.OpenDate.Value.ToString("dd.MM.yyyy", new CultureInfo("en"))</strong>
            </div>
            <div class="col-6">
                Дата закриття:
                <strong>@Request.CloseDate.Value.ToString("dd.MM.yyyy", new CultureInfo("en"))</strong>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-6">
                Потрібно: <strong>@Math.Round((decimal)Request.NeedSum, 2)</strong> грн.<br />
                Зібрано: <strong>@Math.Round((decimal)Request.CurrentSum, 2)</strong> грн.
                Залишилося зібрати: <strong>@(Math.Round((decimal)Request.NeedSum - (decimal)Request.CurrentSum, 2))</strong> грн.
            </div>
            @if (CurrencyPairs.Any())
            {
                <div class="col-6">
                    У інших валютах:
                    @foreach (var rt in CurrencyPairs)
                    {
                        <div>@rt.To: <strong>@Math.Round((decimal)Request.NeedSum * (decimal)rt.CurrentValue, 2)</strong></div>
                    }
                </div>
            }
        </div>

        <SfButton IsPrimary="true" OnClick="@GoToDetailsPage">Деталі</SfButton>
        <SfButton CssClass="e-warning" OnClick="@GoToEditPage">Редагувати</SfButton>       
    </div>
</div>

@code {
    [Parameter]
    public RequestReadDto? Request { get; set; }

    private IEnumerable<CurrencyPairReadDto> CurrencyPairs = new List<CurrencyPairReadDto>();

    protected override async Task OnInitializedAsync()
    {
        CurrencyPairs = await currencyService.GetCurrencyPairsListAsync(true);
    }

    void GoToDetailsPage()
    {
        Navigation.NavigateTo($"/requests/{Request.Id}");
    }

    void GoToEditPage()
    {
        Navigation.NavigateTo($"/requests/edit/{Request.Id}");
    }
}